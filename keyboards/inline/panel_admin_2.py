from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ParseMode

async def main_admin_panel(message : types.Message):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞', callback_data='fake_admin')
    but2 = InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥', callback_data='red_cat')
    but3 = InlineKeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä –±–ª–∏–∂–∞–π—à–∏—Ö –∑–∞–ø–∏—Å–µ–π', callback_data='letmesee_order')
    but4 = InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–π—Å', callback_data="edi_price")
    markup.row(but1).row(but3).row(but2).row(but4)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é ‚öôÔ∏è', reply_markup=markup)

async def red_price_panel(callback : types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É', callback_data='redact_add')
    but2 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É', callback_data='redact_del')
    markup.row(but1, but2)
    await callback.message.edit_text('–í–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è? üíÅüèº‚Äç‚ôÄ', reply_markup=markup)
    await callback.answer()



async def main_panel_for_edit(callback : types.CallbackQuery, cat, cat2):
    markup = InlineKeyboardMarkup()

    but1 = InlineKeyboardButton('–£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π –ª–∏—Ü–∞', callback_data=f'{cat}_order_face')
    but2 = InlineKeyboardButton('–ë—Ä–æ–≤–∏', callback_data=f'{cat}_order_brow')
    but3 = InlineKeyboardButton('–†–µ—Å–Ω–∏—Ü—ã', callback_data=f'{cat}_order_lash')
    but4 = InlineKeyboardButton('–ú–∞–Ω- –∏ –ø–µ–¥–∏–∫—é—Ä', callback_data=f'{cat}_order_man')
    but5 = InlineKeyboardButton('–î–µ–ø–∏–ª—è—Ü–∏—è', callback_data=f'{cat}_order_depil')
    but6 = InlineKeyboardButton('–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è', callback_data=f'{cat}_order_bar')
    but7 = InlineKeyboardButton('–£—Ö–æ–¥ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏', callback_data=f'{cat}_order_care')
    but8 = InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data=f'{cat}_order_else')
    but9 = InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data='redact_aa')

    markup.row(but1, but7).row(but3, but2).row(but6, but5).row(but4, but8).row(but9)
    await callback.message.edit_text(f'{cat2} üíÜüèº‚Äç‚ôÄÔ∏è', reply_markup=markup)
    await callback.answer()



async def end_q():
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å', callback_data='dothisshit')
    but2 = InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data="donotdo")
    markup.row(but1, but2)
    return markup

async def markup_for_warning(i):
    markup = InlineKeyboardMarkup()
    if i[7] == '0':
        but_1 = InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–¥–ø–æ–º–∏–Ω–∞–Ω–∏–µ', callback_data=f'warn_{i[0]}_{i[1]}_{i[3]}')
    else:
        but_1 = InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–¥–ø–æ–º–∏–Ω–∞–Ω–∏–µ (–ø–æ–≤—Ç–æ—Ä–Ω–æ)', callback_data=f'warn_{i[0]}_{i[1]}_{i[3]}')
    return markup.row(but_1)




# ********************************************–£–î–ê–õ–ï–ù–ò–ï\–î–û–ë–ê–í–õ–ï–ù–ò–ï\–†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–ê–ô–°–ê


async def edit_price_panel(callback : types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –ø—Ä–∞–π—Å', callback_data='edit_main_add')
    but2 = InlineKeyboardButton('–ü–æ–º–µ–Ω—è—Ç—å —Ü–µ–Ω—É', callback_data='edit_main_cha')
    but3 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –∏–∑ –ø—Ä–∞–π—Å–∞', callback_data='edit_main_del')
    markup.row(but2).row(but1).row(but3)
    await callback.message.edit_text('–í–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è? üíÅüèº‚Äç‚ôÄ', reply_markup=markup)
    await callback.answer()


# ****************************
# ****************************
# ****************************
async def edit_main_panel_price(callback : types.CallbackQuery, v1, v2):
    markup_main_panel = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton("–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è", callback_data=f"edit_cos_{v2}")
    but2 = InlineKeyboardButton("–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è", callback_data=f"edit_bar_{v2}")
    but3 = InlineKeyboardButton("–ú–∞–Ω–∏–∫—é—Ä", callback_data=f"make_{v2}_man")
    but4 = InlineKeyboardButton("–ü–µ–¥–∏–∫—é—Ä", callback_data=f"make_{v2}_ped")
    but5 = InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='edit_back_1')

    markup_main_panel.row(but1, but2).row(but3, but4).row(but5)
    await callback.message.edit_text(f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {v1}', reply_markup=markup_main_panel, parse_mode=ParseMode.MARKDOWN)
    await callback.answer()

# –ü–æ–¥–∫–∞—Ç–∞–ª–æ–≥–∏
async def edit_main_panel_bar_1(callback : types.CallbackQuery, v1):
    markup_main_panel_bar = InlineKeyboardMarkup()


    butt1 = InlineKeyboardButton('–ñ–µ–Ω—Å–∫–∏–π –∑–∞–ª', callback_data=f'edit_hall_w_{v1}')
    butt2 = InlineKeyboardButton('–ú—É–∂c–∫–æ–π + –¥–µ—Ç—Å–∫–∏–π', callback_data=f'make_{v1}_bar_m')
    butt304 = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=f'edit_back_2_{v1}')
    markup_main_panel_bar.row(butt1, butt2).add(butt304)
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∑–∞–ª üíáüèº‚Äç‚ôÄÔ∏è', reply_markup=markup_main_panel_bar)
    await callback.answer()

async def edit_main_panel_bar_w(callback : types.CallbackQuery, v1):
    markup_main_panel_bar_women = InlineKeyboardMarkup()
    butt3 = InlineKeyboardButton('–°—Ç—Ä–∏–∂–∫–∏', callback_data=f'make_{v1}_cut')
    butt4 = InlineKeyboardButton('–£–∫–ª–∞–¥–∫–∏-–ø—Ä–∏—á–µ—Å–∫–∏', callback_data=f'make_{v1}_bar_laying')
    butt5 = InlineKeyboardButton('–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ-–æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ', callback_data=f'make_{v1}_bar_coloring')
    butt6 = InlineKeyboardButton('–£—Ö–æ–¥ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏', callback_data=f'make_{v1}_bar_care')
    butt7 = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=f"edit_bar_{v1}")
    markup_main_panel_bar_women.row(butt3, butt4).row(butt6, butt5).add(butt7)
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é Ô∏è', reply_markup=markup_main_panel_bar_women, parse_mode=ParseMode.MARKDOWN)
    await callback.answer()

async def edit_main_panel_cos(callback : types.CallbackQuery, v1):
    markup_main_panel_cos = InlineKeyboardMarkup()
    butt8 = InlineKeyboardButton('–ë—Ä–æ–≤–∏', callback_data=f'make_{v1}_cos_brow')
    butt9 = InlineKeyboardButton('–†–µ—Å–Ω–∏—Ü—ã', callback_data=f'make_{v1}_cos_lash')
    butt10 = InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data=f'make_{v1}_cos_ear')
    butt11 = InlineKeyboardButton('–õ–∞–∑. —ç–ø–∏–ª—è—Ü–∏—è', callback_data=f'make_{v1}_cos_epil')
    butt12 = InlineKeyboardButton('–î–µ–ø–∏–ª—è—Ü–∏—è –≤–æ—Å–∫–æ–º', callback_data=f'make_{v1}_cos_depil')
    butt13 = InlineKeyboardButton('–£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π', callback_data=f'make_{v1}_cos_face')
    butt14 = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=f'edit_back_2_{v1}')
    markup_main_panel_cos.row(butt8, butt9).row(butt12, butt13).row(butt11, butt10).add(butt14)
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=markup_main_panel_cos, parse_mode=ParseMode.MARKDOWN)
    await callback.answer()

