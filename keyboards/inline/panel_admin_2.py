from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ParseMode

async def main_admin_panel(message : types.Message):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞', callback_data='fake_admin')
    but2 = InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥', callback_data='red_cat')
    but3 = InlineKeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä –±–ª–∏–∂–∞–π—à–∏—Ö –∑–∞–ø–∏—Å–µ–π', callback_data='letmesee_order')
    markup.row(but1).row(but3).row(but2)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é ‚öôÔ∏è', reply_markup=markup)

async def red_price_panel(callback : types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É', callback_data='redact_add')
    but2 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É', callback_data='redact_del')
    markup.row(but1, but2)
    await callback.message.edit_text('–í–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è? üíÅüèº‚Äç‚ôÄ', reply_markup=markup)
    await callback.answer()



async def main_panel_for_edit(callback : types.CallbackQuery, cat, cat2):
    markup = InlineKeyboardMarkup()

    but1 = InlineKeyboardButton('–£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π –ª–∏—Ü–∞', callback_data=f'{cat}_order_face')
    but2 = InlineKeyboardButton('–ë—Ä–æ–≤–∏', callback_data=f'{cat}_order_brow')
    but3 = InlineKeyboardButton('–†–µ—Å–Ω–∏—Ü—ã', callback_data=f'{cat}_order_lash')
    but4 = InlineKeyboardButton('–ú–∞–Ω- –∏ –ø–µ–¥–∏–∫—é—Ä', callback_data=f'{cat}_order_man')
    but5 = InlineKeyboardButton('–î–µ–ø–∏–ª—è—Ü–∏—è', callback_data=f'{cat}_order_depil')
    but6 = InlineKeyboardButton('–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è', callback_data=f'{cat}_order_bar')
    but7 = InlineKeyboardButton('–£—Ö–æ–¥ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏', callback_data=f'{cat}_order_care')
    but8 = InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data=f'{cat}_order_else')
    but9 = InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data='redact_aa')

    markup.row(but1, but7).row(but3, but2).row(but6, but5).row(but4, but8).row(but9)
    await callback.message.edit_text(f'{cat2} üíÜüèº‚Äç‚ôÄÔ∏è', reply_markup=markup)
    await callback.answer()



async def end_q():
    markup = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å', callback_data='dothisshit')
    but2 = InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data="donotdo")
    markup.row(but1, but2)
    return markup

async def markup_for_warning(i):
    markup = InlineKeyboardMarkup()
    if i[7] == '0':
        but_1 = InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–¥–ø–æ–º–∏–Ω–∞–Ω–∏–µ', callback_data=f'warn_{i[0]}_{i[1]}_{i[3]}')
    else:
        but_1 = InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–¥–ø–æ–º–∏–Ω–∞–Ω–∏–µ (–ø–æ–≤—Ç–æ—Ä–Ω–æ)', callback_data=f'warn_{i[0]}_{i[1]}_{i[3]}')
    return markup.row(but_1)

