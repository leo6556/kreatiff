# from aiogram import types
# from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ParseMode
#
# async def main_admin_panel(message : types.Message):
#     markup = InlineKeyboardMarkup()
#     but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞', callback_data='re_admin')
#     but2 = InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥', callback_data='re_cat')
#     but3 = InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–π—Å', callback_data='re_price')
#     markup.row(but1).row(but2).row(but3)
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é', reply_markup=markup)
#
# async def red_price_panel(callback : types.CallbackQuery):
#     markup = InlineKeyboardMarkup()
#     but1 = InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å', callback_data='red_add')
#     but2 = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data='red_del')
#     markup.row(but1, but2)
#     await callback.message.edit_text('–ß—Ç–æ –Ω—É–∂–Ω–æ?', reply_markup=markup)
#
# async def red_price_round_1(callback : types.CallbackQuery, cat):
#     markup_main_panel = InlineKeyboardMarkup()
#     but1 = InlineKeyboardButton("–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è", callback_data=f"{cat}_cos")
#     but2 = InlineKeyboardButton("–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∞—è", callback_data=f"{cat}_bar")
#     but3 = InlineKeyboardButton("–ú–∞–Ω–∏–∫—é—Ä", callback_data=f"{cat}_use_man")
#     but4 = InlineKeyboardButton("–ü–µ–¥–∏–∫—é—Ä", callback_data=f"{cat}_use_ped")
#     markup_main_panel.row(but1, but2).row(but3, but4)
#     await callback.message.edit_text('–í –∫–∞–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ö–æ—Ç–∏—Ç–∫–µ –¥–æ–±–∞–≤–∏—Ç—å?', reply_markup=markup_main_panel)
#
#
# async def red_price_round_2_bar(callback : types.CallbackQuery, cat):
#     markup_main_panel_bar = InlineKeyboardMarkup()
#     butt1 = InlineKeyboardButton('–ñ–µ–Ω—Å–∫–∏–π –∑–∞–ª', callback_data=f"{cat}_use_hall_w")
#     butt2 = InlineKeyboardButton('–ú—É–∂c–∫–æ–π + –¥–µ—Ç—Å–∫–∏–π', callback_data=f"{cat}_use_bar_m")
#     butt304 = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=f'{cat}_back_to_round_1')
#     markup_main_panel_bar.row(butt1, butt2).add(butt304)
#     await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∑–∞–ª üíáüèº‚Äç‚ôÄÔ∏è', reply_markup=markup_main_panel_bar)
#     await callback.answer()
#
#
# async def red_price_round_3_bar(callback : types.CallbackQuery, cat):
#     markup_main_panel_bar_women = InlineKeyboardMarkup()
#     butt3 = InlineKeyboardButton('–°—Ç—Ä–∏–∂–∫–∏', callback_data=f'{cat}_use_cut')
#     butt4 = InlineKeyboardButton('–£–∫–ª–∞–¥–∫–∏-–ø—Ä–∏—á–µ—Å–∫–∏', callback_data=f'{cat}_use_laying')
#     butt5 = InlineKeyboardButton('–ù–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ-–æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ', callback_data=f'{cat}_use_coloring')
#     butt6 = InlineKeyboardButton('–£—Ö–æ–¥ –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏', callback_data=f'{cat}_use_care')
#     butt7 = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=f'{cat}_back_to_round_1')
#     markup_main_panel_bar_women.row(butt3, butt4).row(butt6, butt5).add(butt7)
#     await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é üíÜüèº‚Äç‚ôÄÔ∏è', reply_markup=markup_main_panel_bar_women, parse_mode=ParseMode.MARKDOWN)
#     await callback.answer()
#
#
# async def red_price_round_2_cos(callback : types.CallbackQuery, cat):
#     markup_main_panel_cos = InlineKeyboardMarkup()
#     butt8 = InlineKeyboardButton('–ë—Ä–æ–≤–∏', callback_data=f'{cat}_use_brow')
#     butt9 = InlineKeyboardButton('–†–µ—Å–Ω–∏—Ü—ã', callback_data=f'{cat}_use_lash')
#     butt10 = InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data=f'{cat}_use_ear')
#     butt11 = InlineKeyboardButton('–õ–∞–∑. —ç–ø–∏–ª—è—Ü–∏—è', callback_data=f'{cat}_use_epil')
#     butt12 = InlineKeyboardButton('–î–µ–ø–∏–ª—è—Ü–∏—è –≤–æ—Å–∫–æ–º', callback_data=f'{cat}_use_depil')
#     butt13 = InlineKeyboardButton('–£—Ö–æ–¥ –∑–∞ –∫–æ–∂–µ–π', callback_data=f'{cat}_use_face')
#     butt14 = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=f'{cat}_back_to_round_1')
#     markup_main_panel_cos.row(butt8, butt9).row(butt12, butt13).row(butt11, butt10).add(butt14)
#     await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é üíÜüèº‚Äç‚ôÄÔ∏è', reply_markup=markup_main_panel_cos, parse_mode=ParseMode.MARKDOWN)
#     await callback.answer()
#
# async def markup_for_end():
#     markup = InlineKeyboardMarkup()
#     but1 = InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='–û—Ç–º–µ–Ω–∏—Ç—å')
#     but2 = InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='–û—Ç–º–µ–Ω–∏—Ç—å')
#     markup.row(but1, but2)
#     return markup
#
